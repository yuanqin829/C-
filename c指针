#include <stdio.h>
void main()
{             // 多级指针处理二维数组
	int num[3][4] = { 0,1,2,3,{1,2,3,4,},{2,3,4,5,} };
	int* p[3], ** pp;
	int i, j;
	for (i = 0; i < 3; i++)
	{
		p[i] = num[i];//指针数组p存放数组num每行的首地址
	}
	pp = p;//使二级指针p指向指针数组p的首地址num[0]
	for (i = 0; i < 3; i++)
	{
		for (j = 0; j < 4; j++)
		{
			printf("%-3d", *(*(pp + i) + j));//借助二级指针输出数组元素
		}
		printf("\n"); 打印结果  0  1  2  3
			                     1  2  3  4
			                     2  3  4  5
     
	}

	return 0;
}



#include <stdio.h>

void main()
{
	int a[10], * pa, i;

	for (i = 0; i < 10; i++)//数组元素赋值
	{
		a[i] = i + 1;
	}                                                 
	pa = a;//将指针指向数组的首地址

	//用指针的形式逐个输出数组元素内容   
	for (i = 0; i < 10; i++)
	{
		printf("*(pa+%d);%d\n", i, *(pa + i));
	}

	return 0;
}
打印结果 
*(pa+0);1
*(pa+1);2
*(pa+2);3
*(pa+3);4
*(pa+4);5
*(pa+5);6
*(pa+6);7
*(pa+7);8
*(pa+8);9
*(pa+9);10

//////////////////////////
取地址与取内容运算符
int main()
{
	int* p, * q, r = 0, s = 1;
	q = &s;
	p = &r;
	*q = r;
	printf("p=%d,*q=%d\n", *p, *q);
	r++;
	printf("*p=%d,*q=%d", *p, *q);
  
打印结果    p=0,*q=0
          *p=1,*q=0
	    

	return 0;
}
