

  
  1流程图（判断用户输入的数据是否是10，如果小于大于都提示，如果正确则结束程序）
2打印个人信息
3二进制的操作
4获取矩形的周长和面积
数字取反（数字翻转）
5闰年 
  可以被4整除并且不开提被100整除
  或者可以被400整除的年份

                          ｛开始｝
                         {初始化为0}
                    ————> {用户输入x}~~~~~~~~~~~|
               |         {是否大于10}----->{数据大于10｝
             小于10------{是否小于10}
                         ｛输入正确｝
                          ｛结束｝
	/*                  F12-045
				F12= 1111 0001 0010
				045= 0000 0010 0101
		  -045= 1000 0000 0010 0101
		  反码  1111 1111 1101 1010
	——————————————————
		  补码  1111 1111 1101 1010
				0000 1111 0001 0010
  +抛弃最高位  10000 1110 1110 1101
					 1110 1110 1101*/
   /*（A>3 && <5两个条件都要满足再执行）   (1 & 0 (有0则0))
	(A>3 || a <5（满足一个条件就是真）)   (有1则1（0|0=0）)
	（？：表示式？表示是真1 表示式是假2）danny >18 ？已成年：未成年
	  （++i i++）
	   （^有异或 111^010=101）
	   (~取反） （！逻辑非)  !(danny>18)=1
	   如果...否则*/
	      if...slse..
	   	   if (条件)
	   	   {

	      }else  不是必须
	      {
	   	   //......
	      }
	      如果条件为真，执行if里面的语句，else里面的语句不会执行，如果if条件为假
	   就执行if大括号里面的语句，而执行else大括号里面的语句
	   	注意 在if判断条件括号中，如果条件为0则为假，如果条件1真
	  分支嵌套

   #define  _CRT_SECURE_NO_WARNINGS
   #include <stdio.h>

	   /*printf("姓名，最帅danny\t");
	   printf("性别：男\n");
	   printf("年龄:17岁\a\\\t");
	   printf("爱好：爱好，上课，学习");*/

	   int x, y;
	   printf("请输入两个 数字\n");
	   scanf("%d %d", &x, &y);// 空格 逗号 回车
	   printf("周长是%d \n", 2 * (x + y));
	   printf("面积是%d \n", x * y);
	   getchar();
	   /*int x = 0;

	   printf("闰年，请输入你想查询的年份\n");
	   scanf("%d", &x);

	   if (x % 4 == 0 && x % 100 != 0 || x % 400 == 0);
	   {
		   printf("%d 年是闰年\n", x);
	   }
	   else
	   {
		   printf("%d年不是闰年\n", x);*/

		  /* 算法：算法是解决某一特定的问题而制定的一个实现过程。
		   1.有穷性
		   2.确定性
		   3.可行性
		   4.输入
		   5.输出
		   三大控制结构。
		   1.顺序结构。
		   /一个程序总是从主函数的第一个语句开始执行，从上往下去执行，从主函数结束。
		   2.分支结构*/

		   /*if  如果表达式为真，执行语句，否则不执行。
		    if（表达式）
		   {
		   	语句
		   }*/

		   注意；if（）后面不要有分号，;结束的意思
		    =（赋值） ==（比较相不相等）
		   /*if else
		   if (表示式)//表达式为真，执行语句1，表达式假
		     {
		    	语句1；如果
		     }
		      else
	       ｛
		     语句2；否则
		    ｝
		  注意;()用不用，取决于if管辖范围。
		  else不可能单独出现。
		  else对应前面那个并列的if*/

/*if  else  if
if(表达式）//
{
  语句1；
}
else  if
{
   语句2；
}*/

/*x = y + 1; (x < 0)
	y = x2; (0 < x < 10)
	y = x2 + 4;(10<x)*/
          

switch

3.循环结构

#define  _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main()
{
	//判断一个数是不是奇数
	int a;
	scanf("%d", &a);
	if (a % 2 == 1) // a % 2 == 1
	{
		printf("a是一个奇数！\n");
	}

	//判断你有没有挂科
	float math; //数学分数
	scanf("%f", &math);
	if (math < 60)
	{
		printf("补考费准备好没有?\n");
	}
	else
	{
		printf("恭喜！你没有挂号\n");
	}

	判断2个数的大小。
	/*int a, b;
	scanf("%d%d", &a, &b);
	if (a > b)//如果
	{
		printf("a=%d更大\n", a);
	}
	else//否则
	{
		printf("a不大于b\n");
	}*/

	/*int a, b;
	scanf("%d%d", &a, &b);
	if (a > b)
	{
		printf("a>b");
	}
	else if (a == b)
	{
		printf("a==b");
	}
	else
	{
		printf("a<b");	}*/


	/*int x;
	int y;
	scanf("%d", &x);
	if (x < 0)

	{
		y = x + 1;
	}
	else if (x >= 0 && x < 10)
	{
		y = x * x;
	}
	else if (x >= 10)
	{
		y = x * x + 4;
	}
	printf("y=%d\n", y);*/

	/*char a;
	int b;
	float c;
	scanf("%c%d%f", &a, &b, &c);*/

	分数
	/*60分及格。
	 60--75   中
		75--90    良
		90--100 优秀*/

	float math;
    scanf("%f", &math);

	if (math < 60)
	{
		printf("不及格");
	}
	else if (math >= 60)
	{
		if (math >= 60 && math < 75)
		{
			printf("中等");
		}
		else if (math >= 75 && math < 90)
		{
			printf("良好");
		}
		else
		{
			printf("优秀");
		}
	}

}










